{"version":3,"file":"common.js","mappings":"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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/point-geometry/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/v8.json","webpack://ol-mapbox-style/./node_modules/ol/AssertionError.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/ImageBase.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/events/KeyCode.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/style/flat.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/extend.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/get_type.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","module.exports = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"cross-faded-data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"cross-faded-data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":true,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"cross-faded-data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"cross-faded-data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"cross-faded\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"cross-faded\":{\"type\":\"property-type\"},\"cross-faded-data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      function (resolve, reject) {\n        const layer =\n          /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n            this.getLayer()\n          );\n        const layerUid = getUid(layer);\n        const source = layer.getSource();\n        const projection = this.renderedProjection;\n        const projectionExtent = projection.getExtent();\n        const resolution = this.renderedResolution;\n        const tileGrid = source.getTileGridForProjection(projection);\n        const coordinate = applyTransform(\n          this.renderedPixelToCoordinateTransform_,\n          pixel.slice()\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n          coordinate,\n          resolution\n        );\n        let tile;\n        for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n          if (\n            tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n          ) {\n            tile = this.renderedTiles[i];\n            if (tile.getState() === TileState.LOADED) {\n              const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n              if (\n                source.getWrapX() &&\n                projection.canWrapX() &&\n                !containsExtent(projectionExtent, extent)\n              ) {\n                wrapX(coordinate, projection);\n              }\n              break;\n            }\n            tile = undefined;\n          }\n        }\n        if (!tile || tile.loadingSourceTiles > 0) {\n          resolve([]);\n          return;\n        }\n        const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        const corner = getTopLeft(extent);\n        const tilePixel = [\n          (coordinate[0] - corner[0]) / resolution,\n          (corner[1] - coordinate[1]) / resolution,\n        ];\n        const features = tile\n          .getSourceTiles()\n          .reduce(function (accumulator, sourceTile) {\n            return accumulator.concat(sourceTile.getFeatures());\n          }, []);\n        let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n        if (!hitDetectionImageData && !this.animatingOrInteracting_) {\n          const tileSize = toSize(\n            tileGrid.getTileSize(\n              tileGrid.getZForResolution(resolution, source.zDirection)\n            )\n          );\n          const rotation = this.renderedRotation_;\n          const transforms = [\n            this.getRenderTransform(\n              tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n              resolution,\n              0,\n              HIT_DETECT_RESOLUTION,\n              tileSize[0] * HIT_DETECT_RESOLUTION,\n              tileSize[1] * HIT_DETECT_RESOLUTION,\n              0\n            ),\n          ];\n          hitDetectionImageData = createHitDetectionImageData(\n            tileSize,\n            transforms,\n            features,\n            layer.getStyleFunction(),\n            tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n            tile.getReplayState(layer).renderedResolution,\n            rotation\n          );\n          tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n        }\n        resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.0.0';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nexport default function (output     , ...inputs            )      {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && 'id' in this.feature && this.feature.id ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \nimport Point from '@mapbox/point-geometry';\n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord       ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                               \n                             \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style: this.currency ? \"currency\" : \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\nexport default function getType(val       )         {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                                                                          \n                        \n                                    \n                                                                             \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  } else {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}) {\n  if (url in pendingRequests) {\n    return pendingRequests[url];\n  } else {\n    const request = options.transformRequest\n      ? options.transformRequest(url, resourceType) || new Request(url)\n      : new Request(url);\n    if (!request.headers.get('Accept')) {\n      request.headers.set('Accept', 'application/json');\n    }\n    const pendingRequest = fetch(request)\n      .then(function (response) {\n        delete pendingRequests[url];\n        return response.ok\n          ? response.json()\n          : Promise.reject(new Error('Error fetching source ' + url));\n      })\n      .catch(function (error) {\n        delete pendingRequests[url];\n        return Promise.reject(new Error('Error fetching source ' + url));\n      });\n    pendingRequests[url] = pendingRequest;\n    return pendingRequest;\n  }\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      let normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve(\n          Object.assign({}, glSource, {\n            url: undefined,\n            tiles: normalizedSourceUrl,\n          })\n        );\n      } else {\n        promise = fetchResource('Source', normalizedSourceUrl, options).then(\n          function (tileJson) {\n            for (let i = 0, ii = tileJson.tiles.length; i < ii; ++i) {\n              const tileUrl = tileJson.tiles[i];\n              if (options.transformRequest) {\n                const request = options.transformRequest(\n                  normalizedSourceUrl,\n                  'Source'\n                );\n                if (request) {\n                  normalizedSourceUrl = request.url;\n                }\n              }\n              let normalizedTileUrl = normalizeSourceUrl(\n                tileUrl,\n                options.accessToken,\n                options.accessTokenParam || 'access_token',\n                normalizedSourceUrl\n              );\n              if (options.transformRequest) {\n                const transformedRequest = options.transformRequest(\n                  normalizedTileUrl,\n                  'Tiles'\n                );\n                if (transformedRequest instanceof Request) {\n                  normalizedTileUrl = decodeURI(transformedRequest.url);\n                }\n              }\n              tileJson.tiles[i] = normalizedTileUrl;\n            }\n            return Promise.resolve(tileJson);\n          }\n        );\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          return normalizeSourceUrl(\n            tileUrl,\n            options.accessToken,\n            options.accessTokenParam || 'access_token',\n            styleUrl || location.href\n          );\n        }),\n      });\n      promise = Promise.resolve(Object.assign({}, glSource));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(fonts) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const googleFontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    googleFontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = googleFontDescriptions.length; i < ii; ++i) {\n    const googleFontDescription = googleFontDescriptions[i];\n    const family = googleFontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${googleFontDescription[2]}\\n${googleFontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl =\n          'https://fonts.googleapis.com/css?family=' +\n          family.replace(/ /g, '+') +\n          ':' +\n          googleFontDescription[1] +\n          googleFontDescription[2];\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  renderTransparentEnabled = enabled;\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>):Array<string>} getFonts Function that\n * receives a font stack as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n\n  let spriteImage, spriteImgSize;\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = function () {\n        spriteImage = img;\n        spriteImgSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n      img.src = spriteImageUrl;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImgSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = {};\n  const filterCache = {};\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  const styleFunction = function (feature, resolution) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            if (spriteImage && spriteData && spriteData[icon]) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = feature.getGeometry();\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  let icon_cache_key = icon + '.' + iconSize;\n                  if (iconColor !== null) {\n                    icon_cache_key += '.' + iconColor;\n                  }\n                  iconImg = iconImageCache[icon_cache_key];\n                  if (!iconImg) {\n                    const spriteImageData = spriteData[icon];\n\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      );\n                      displacement[1] *= -1;\n                    }\n                    iconImg = new Icon({\n                      color: iconColor\n                        ? [\n                            iconColor.r * 255,\n                            iconColor.g * 255,\n                            iconColor.b * 255,\n                            iconColor.a,\n                          ]\n                        : undefined,\n                      img: spriteImage,\n                      imgSize: spriteImgSize,\n                      size: [spriteImageData.width, spriteImageData.height],\n                      offset: [spriteImageData.x, spriteImageData.y],\n                      rotateWithView: iconRotationAlignment === 'map',\n                      scale: iconSize / spriteImageData.pixelRatio,\n                      displacement: displacement,\n                      declutterMode: declutterMode,\n                    });\n                    iconImageCache[icon_cache_key] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts ? getFonts(fontArray) : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          text.setPlacement(placement);\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            let textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            text.setTextAlign(textAlign);\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setTextAlign();\n            text.setRotateWithView(false);\n          }\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if (typeof feature.set === 'function') {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', {});\n  return styleFunction;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(\n        extent,\n        sourceZ,\n        function (sourceTileCoord) {\n          empty =\n            empty &&\n            !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n        }.bind(this)\n      );\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  getValue,\n} from './stylefunction.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getGlStyle,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {equivalent, fromLonLat, getUserProjection} from 'ol/proj.js';\nimport {getFonts} from './text.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/** @typedef {import(\"ol/layer/Group.js\").default} LayerGroup */\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {Array<number>} [resolutions] Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/** @typedef {import(\"ol/layer/Layer\").default} Layer */\n/** @typedef {import(\"ol/source/Source\").default} Source */\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle`.\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url`,\n * `tileUrlFunction` and `tileGrid` (exception: when the source projection is not `EPSG:3857`).\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s from the\n * Mapbox Style object. When a `source` key is provided, all layers for the\n * specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options|string} optionsOrPath Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} resolutions Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayers = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options} */\n  let options;\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          } else {\n            const glSource = glStyle.sources[sourceId];\n            let source = layer.getSource();\n            if (!source || source.get('mapbox-source') !== glSource) {\n              source = setupGeoJSONSource(glSource, styleUrl, options);\n            }\n            const targetSource = /** @type {VectorSource} */ (\n              layer.getSource()\n            );\n            if (!targetSource) {\n              layer.setSource(source);\n            } else if (source !== targetSource) {\n              if (!targetSource.getAttributions()) {\n                targetSource.setAttributions(source.getAttributions());\n              }\n              //@ts-ignore\n              if (!targetSource.format_) {\n                //@ts-ignore\n                targetSource.format_ = source.getFormat();\n              }\n              //@ts-ignore\n              targetSource.url_ = source.getUrl();\n            }\n            return Promise.resolve();\n          }\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed = options.transformRequest(\n                  spriteImageUrl,\n                  'SpriteImage'\n                );\n                if (transformed instanceof Request) {\n                  spriteImageUrl = encodeURI(transformed.url);\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setBackground(mapOrLayer, layer, options) {\n  const background = {\n    id: layer.id,\n    type: layer.type,\n  };\n  const functionCache = {};\n\n  function getBackgroundColor(resolution) {\n    const layout = layer.layout || {};\n    const paint = layer.paint || {};\n    background['paint'] = paint;\n    const zoom = getZoomForResolution(\n      resolution,\n      options.resolutions || defaultResolutions\n    );\n    let bg, opacity;\n    if (paint['background-color'] !== undefined) {\n      bg = getValue(\n        background,\n        'paint',\n        'background-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n    }\n    if (paint['background-opacity'] !== undefined) {\n      opacity = getValue(\n        background,\n        'paint',\n        'background-opacity',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n    }\n    return layout.visibility == 'none'\n      ? undefined\n      : _colorWithOpacity(bg, opacity);\n  }\n\n  let lastRenderTime = 0;\n  let backgroundRendered = false;\n  /**\n   * @param {import(\"ol/render/Event.js\").default} e Render event\n   */\n  function renderBackground(e) {\n    if (e.frameState.time !== lastRenderTime) {\n      lastRenderTime = e.frameState.time;\n      backgroundRendered = false;\n    }\n    if (backgroundRendered) {\n      return;\n    }\n    if (!(e.context instanceof CanvasRenderingContext2D)) {\n      throw new Error('Cannot apply background to WebGL context');\n    }\n    const resolution = e.frameState.viewState.resolution;\n    const color = getBackgroundColor(resolution);\n    if (color) {\n      const context = e.context;\n      const alpha = context.globalAlpha;\n      context.globalAlpha = 1;\n      context.fillStyle = color;\n      context.fillRect(0, 0, e.context.canvas.width, e.context.canvas.height);\n      context.globalAlpha = alpha;\n    }\n    backgroundRendered = true;\n  }\n\n  if (typeof mapOrLayer.getLayers === 'function') {\n    // map or layer group\n    const layers = mapOrLayer.getLayers();\n    layers.forEach(function (layer) {\n      layer.on('prerender', renderBackground);\n    });\n    layers.on('add', function (e) {\n      e.element.on('prerender', renderBackground);\n    });\n    layers.on('remove', function (e) {\n      e.element.un('prerender', renderBackground);\n    });\n  } else {\n    mapOrLayer.on('prerender', renderBackground);\n  }\n}\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      setBackground(mapOrLayer, layer, options);\n      return true;\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or VectorTile layer.\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|VectorTileLayer} mapOrLayer OpenLayers Map or VectorTile layer.\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  if (typeof glStyle === 'object') {\n    setFirstBackground(mapOrLayer, glStyle, options);\n    return Promise.resolve();\n  }\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]]);\n    const tr = fromLonLat([bounds[2], bounds[3]]);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function (tileJSON) {\n        const tileJSONSource = new TileJSON({tileJSON: tileJSON});\n        const tileJSONDoc = tileJSONSource.getTileJSON();\n        const tileGrid = tileJSONSource.getTileGrid();\n        const extent = extentFromTileJSON(tileJSONDoc);\n        const minZoom = tileJSONDoc.minzoom || 0;\n        const maxZoom = tileJSONDoc.maxzoom || 22;\n        const sourceOptions = {\n          attributions: tileJSONSource.getAttributions(),\n          format: new MVT(),\n          tileGrid: new TileGrid({\n            origin: tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: defaultResolutions.slice(0, maxZoom + 1),\n            tileSize: 512,\n          }),\n        };\n        if (Array.isArray(tileJSONDoc.tiles)) {\n          sourceOptions.urls = tileJSONDoc.tiles;\n        } else {\n          sourceOptions.url = tileJSONDoc.tiles;\n        }\n        if (tileJSON.olSourceOptions) {\n          Object.assign(sourceOptions, tileJSON.olSourceOptions);\n        }\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function (tileJson) {\n      const source = new TileJSON({\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      const extent = extentFromTileJSON(tileJson);\n      const tileGrid = source.getTileGrid();\n      const tileSize = glSource.tileSize || tileJson.tileSize || 512;\n      const minZoom = tileJson.minzoom || 0;\n      const maxZoom = tileJson.maxzoom || 22;\n      //@ts-ignore\n      source.tileGrid = new TileGrid({\n        origin: tileGrid.getOrigin(0),\n        extent: extent || tileGrid.getExtent(),\n        minZoom: minZoom,\n        resolutions: createXYZ({\n          maxZoom: maxZoom,\n          tileSize: tileSize,\n        }).getResolutions(),\n        tileSize: tileSize,\n      });\n      const getTileUrl = source.getTileUrlFunction();\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf('{bbox-epsg-3857}') != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace('{bbox-epsg-3857}', bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nconst geoJsonFormat = new GeoJSON();\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    let geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (options.transformRequest) {\n      const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n      if (transformed instanceof Request) {\n        geoJsonUrl = encodeURI(transformed.url);\n      }\n    }\n    sourceOptions.url = geoJsonUrl;\n  } else {\n    sourceOptions.features = geoJsonFormat.readFeatures(data, {\n      featureProjection: getUserProjection() || 'EPSG:3857',\n    });\n  }\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (event.frameState.viewState.zoom !== zoom) {\n      zoom = event.frameState.viewState.zoom;\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution: defaultResolutions[0],\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(defaultResolutions[0] / Math.pow(2, glStyle.zoom));\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let glLayer, glSource, glSourceId, id, layer;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap' || type == 'hillshade') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else if (type == 'background') {\n      setBackground(mapOrGroup, glLayer, options);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n        glSource = glStyle.sources[id];\n        if (glSource.type == 'vector') {\n          layer = setupVectorLayer(glSource, styleUrl, options);\n        } else if (glSource.type == 'raster') {\n          layer = setupRasterLayer(glSource, styleUrl, options);\n          layer.setVisible(\n            glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n          );\n          const functionCache = {};\n          layer.on(\n            'prerender',\n            prerenderRasterLayer(glLayer, layer, functionCache)\n          );\n        } else if (glSource.type == 'geojson') {\n          layer = setupGeoJSONLayer(glSource, styleUrl, options);\n        }\n        glSourceId = id;\n        if (layer) {\n          layer.set('mapbox-source', glSourceId);\n        }\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  mapOrGroup.set('mapbox-style', glStyle);\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroup Either an existing OpenLayers Map\n * instance, or a HTML element, or the id of a HTML element that will be the\n * target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroup, style, options = {}) {\n  let promise;\n\n  if (typeof mapOrGroup === 'string' || mapOrGroup instanceof HTMLElement) {\n    mapOrGroup = new Map({\n      target: mapOrGroup,\n    });\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n * @private\n */\nfunction finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            layer.setVisible(true);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map} map OpenLayers Map.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map} map OpenLayers Map.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getAllLayers();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map} map OpenLayers Map.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return null;\n}\n\nexport {finalizeLayer as _finalizeLayer};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t592: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","Point","x","y","this","module","exports","prototype","clone","add","p","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","k","_mult","div","_div","rotate","a","_rotate","rotateAround","_rotateAround","matMult","m","_matMult","unit","_unit","perp","_perp","round","_round","mag","Math","sqrt","equals","other","dist","distSqr","dx","dy","angle","atan2","angleTo","b","angleWith","angleWithSep","cos","sin","convert","Array","isArray","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","x2","i","abs","d2","solve","kCSSColorTable","clamp_css_byte","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","n","o","exp","u","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","code","const","message","super","Property","CollectionEvent","element","index","array","options","on","once","un","unique_","unique","array_","let","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","removeAt","prev","setAt","except","ADD","REMOVE","Disposable","disposed","dispose","disposeInternal","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","EventType","src","then","catch","error","IDLE","LOADING","LOADED","ERROR","EMPTY","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","changed","handleImageError_","ctx","fillStyle","fillRect","canvas","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","resolution","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","geometry","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","getExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","undefined","getMap","renderFrame","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","ObjectEventType","redrawText","element_","document","createElement","position","width","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","parentNode","removeChild","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","renderDeclutter","display","Map","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","property","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","Target","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","jj","setCollapsible","updateElement_","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","zoomByDelta","anchor","newResolution","getResolutionForZoom","handleEvent","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","getResolution","adjustCenterInternal","begin","distance","getDistance","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","animateInternal","getConstrainedCenter","endInteraction","Pointer","DragRotate","lastAngle_","getConstraints","getSize","theta","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","getGeometry","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","charCode","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","Date","now","lastIndex","firstIndex","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getBoundingClientRect","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","layers","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","View","Collection","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","addChangeListener","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","CollectionEventType","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","lowOnFrameBudget","time","resolveConstraints","Composite","defaultView","updateSize","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","extent","usedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","setLayerGroup","oldLayerGroup","setSize","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","console","warn","setViewportSize","ObjectEvent","oldValue","values_","hasOwnProperty","getKeys","keys","getProperties","assign","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","PROPERTYCHANGE","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","TileRange","createOrUpdate","tileRange","containsXY","containsTileRange","getHeight","getWidth","intersects","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","cosAngle","sinAngle","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenter","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","series","complete","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","ANIMATING","INTERACTING","binarySearch","haystack","needle","comparator","mid","cmp","numberSafeCompareFunction","found","linearFindNearest","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","cache","cacheSize","fromString","g","exec","el","body","rgb","fromNamed","hasAlpha","normalize","Number","fromStringInternal_","asArray","asColorLike","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","variant","families","family","createCanvasContext2D","canvasPool","settings","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","propagate","dispatching","pendingRemovals","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","getRotatedViewport","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","FeatureFormat","defaultFeatureProjection","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","GeometryCollection","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","translate","Geometry","clonedGeometries","getObject","JSON","parse","readFeatureFromObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readPointGeometry","LineString","readLineStringGeometry","readPolygonGeometry","MultiPoint","readMultiPointGeometry","MultiLineString","readMultiLineStringGeometry","MultiPolygon","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","tolerance","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends","ends_","getLayout","lineStrings","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","inflate","deflate","SimpleGeometry","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","orient","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getStrideForLayout","transformGeom2D","simpleGeometry","getFirstCoordinate","getLastCoordinate","nesting","getLayoutForStride","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","defineProperty","background_","background","opacity","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","toStyle","flatStyle","Style","fill","getFill","stroke","getStroke","text","getText","prefix","Fill","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","Text","font","maxAngle","placement","rotateWithView","textAlign","justify","textBaseline","backgroundFill","backgroundStroke","iconSrc","iconImg","Icon","imgSize","anchorOrigin","anchorXUnits","anchorYUnits","displacement","declutterMode","shapePoints","RegularShape","radius","radius1","radius2","circleRadius","Circle","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","GroupEvent","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","LayerGroup","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","inView","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","Promise","resolve","getData","prepareFrame","getMapInternal","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","globalAlpha","drawImage","pixelTransform","inversePixelTransform","canvasTransform","useContainer","replayGroup","containerReused","preRender","clipped","layerExtent","clipUnrotated","restore","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","BaseVector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tt","tileGrid","hitExtent","declutteredFeatures","reject","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","setTransform","pixelScale","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","global","worldExtent","getPointResolution","cosh","Projection","PROJECTIONS","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","projectionLike","pointResolution","getter","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","projections2","forwardTransform","inverseTransform","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","atan","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","METERS_PER_UNIT","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","measureFont","measureElement","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","origin","getOrigin","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","setLineDash","drawLabelWithPointPlacement_","baseline","execute_","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","arc","closePath","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","executeHitDetection","ORDER","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","executor","zs","builderTypes","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","beg","keep","saveTextStates_","p0","flatEnd","flatOffset","oo","range","drawChars_","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","CanvasImmediateRenderer","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","setColor","setText","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","CanvasLayerRenderer","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","canExpireCache","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","ReprojTile","targetTileGrid","getTileFunction","renderEdges","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","sources","triangulation","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","steps","leftToLoad","sourceListenKey","unlistenSources_","Tile","createSnapToN","createSnapToZero","hasArea","toSize","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","RBush","maxEntries","rbush_","items_","extents","items","bbox","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","Source","CircleStyle","getRadius","getDisplacement","setRadius","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","offset_","offsetOrigin_","offsetOrigin","origin_","setAnchor","iconImageSize","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","shared","ImageStyle","scaleArray_","displacement_","setDisplacement","setRotateWithView","setScale","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","toFunction","setRenderer","setHitDetectionRenderer","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","transformStringDiv","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","transformString","abstract","uidCounter_","getUid","ol_uid","VERSION","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","rgba","toArray","toArray01","toArray01PremultipliedAlpha","white","transparent","red","blue","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","expression","stop","appendStopPair","fixupDegenerateStepCurve","base","curve","isStep","interpolated","convertTokenString","re","literal","inputs","Scope","bindings","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","expected","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","expectedType","evaluate","eachChild","outputDefined","RuntimeError","types","string","number","boolean","Assertion","parsed","arg","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","EvaluationContext","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","parsedArgs","argParseFailed","errors","signatures","actualTypes","register","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectPolygon","vectorP","vectorQ","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","from","to","Xn","Zn","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","Interpolate","operator","interpolation","exponentialInterpolation","lowerValue","upperValue","difference","interpolationFactor","lower","upper","controlPoints","rest","outputLower","outputUpper","Coalesce","needsAnnotation","firstImage","argCount","Let","At","In","IndexOf","fromIndex","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","hasUntypedArgument","Comparison","lt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","supportsInterpolation","spec","identityFunction","createFunction","innerFun","hashedStops","categoricalKeyType","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","interpolationType","_","keyType","interp","colorspace","evaluatedLower","evaluatedUpper","StyleExpression","_warningHistory","_evaluator","_defaultValue","_enumValues","createExpression","parser","enum","formatted","resolvedImage","getExpectedType","evaluateWithoutErrorHandling","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isFeatureConstant","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","deserialize","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterFunc","filterSpec","latest","compiledStaticFilter","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","Set","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","deref","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","degrees","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","request","transformRequest","Request","headers","pendingRequest","fetch","response","ok","json","getGlStyle","glStyleOrUrl","trim","accessToken","glStyle","tilejsonCache","getTileJson","glSource","cacheKey","promise","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","normalizedTileUrl","transformedRequest","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","loadedFontFamilies","fontFamilyRegEx","stripQuotesRegEx","hasFontFamily","styleSheets","styleSheet","cssRules","rules","cssRule","cssText","processedFontFamilies","getFonts","fontsKey","googleFontDescriptions","cssFont","googleFontDescription","fontUrl","querySelector","markup","rel","head","renderFeatureCoordinates","emptyObj","zoomObj","getValue","layoutOrPaint","functionCache","layerId","functions","isExpr","convertIdentityFunction","tokens","featureFunctionParameters","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","compiledExpression","rawExpression","expressionData","getIconDeclutterMode","evaluateFilter","filterCache","colorWithOpacity","templateRegEx","fromTemplate","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","version","spriteImage","spriteImgSize","worker","postMessage","action","mapboxSource","allLayers","ref","derefLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","sourceLayer","textHalo","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon","icon_cache_key","pattern","spriteImageData","createPattern","hasImage","placementAngle","skipLabel","styleGeom","iconRotationAlignment","geom","iconSize","iconColor","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","textLineHeight","textSize","maxTextWidth","fontArray","textField","chunk","chunkFont","textTransform","wrappedLabel","textAnchor","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","haloColor","halfTextSize","textPadding","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","featureClass_","featureClass","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","pbfLayer","getKeyZXY","fromKey","tmpTileCoord","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","TileCache","pruneExceptNewestZ","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","expandUrl","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","TileJSON","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","BaseTileLayer","TileLayer","BaseTile","features_","onLoad","setFeatures","onError","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","candidate","usedSourceTiles","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","empty","completeOptions","applyStyle","optionsOrPath","sourceId","Vector","VectorTile","find","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","onChange","sprite","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","encodeURI","mapOrLayer","lastRenderTime","backgroundRendered","renderBackground","CanvasRenderingContext2D","bg","getBackgroundColor","setFirstBackground","applyBackground","getSourceIdByRef","extentFromTileJSON","bounds","tr","tileJSONSource","tileJSONDoc","sourceOptions","olSourceOptions","setupVectorLayer","setupRasterLayer","getTileUrl","geoJsonFormat","GeoJSON","geoJsonUrl","setupGeoJSONLayer","prerenderRasterLayer","glLayer","updateRasterLayerProperties","processStyle","mapOrGroup","promises","glSourceId","glLayers","layerIds","finalizeLayer","HTMLElement","sourceMinZoom","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}